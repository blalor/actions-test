---
name: do the thing
run-name: "thinging on ${{ github.event_name }}, #${{ github.run_number }}"

on:
    push:
        branches:
            - main

    pull_request:


env:
    # github.sha -- the commit SHA that triggered the workflow
    COMMIT_HASH: "${{ github.event.pull_request.head.sha || github.sha }}"
    BRANCH: "${{ github.head_ref || github.ref_name }}"
    GITHUB_ACTION_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

    # if not pull_request, assume push.
    # â€¦.head_commit.message may be multi-line, so take only the first line when
    # actually using it. ðŸ« 
    CTRLPLANE_VERSION_NAME: >-
        ${{
            github.event.pull_request
            && format(
                'PR#{0}/{1} {2}',
                github.event.pull_request.number,
                github.run_number,
                github.event.pull_request.title
            )
            || github.event.head_commit.message
        }}

jobs:
    envsubst:
        runs-on: ubuntu-latest

        steps:
            -   name: convert yaml values to env vars
                env:
                    VALUES: |-
                        foo: bar
                        qwerty: uiop
                        asdf jkl: ";date"

                run: |-
                    yq '
                        to_entries
                        | .[]
                        | (.key + "=" + .value)
                    ' >> "${GITHUB_ENV}" <<< "${VALUES}"

                    cat "${GITHUB_ENV}"

            -   run: env

    "j-o-b":
        name: job
        runs-on: ubuntu-latest

        steps:
            -   name: Startup Time
                shell: python
                run: |-
                    import os
                    from datetime import datetime, UTC

                    ts = datetime.now(tz=UTC)
                    with open(os.environ["GITHUB_OUTPUT"], "w+") as ofp:
                        print(f"startup_time={ts.isoformat()}", file=ofp)

            -   name: dump contexts
                shell: bash
                run: |-
                    set -e

                    cat <<-'__ctx' >| context-github.json
                    {
                        "github": ${{ toJSON(github) }},
                        "inputs": ${{ toJSON(inputs) }},
                        "vars": ${{ toJSON(vars) }},
                        "env": ${{ toJSON(env) }}
                    }
                    __ctx


            -   uses: namespacelabs/breakpoint-action@v0
                if: "github.run_attempt > 1"
                with:
                    authorized-users: blalor

            -   name: upload artifacts
                uses: actions/upload-artifact@v4
                with:
                    name: contexts-${{ github.job }}
                    path: context-*.json

            -   name: checkout
                uses: actions/checkout@v4

            # -   name: Setup tmate session
            #     uses: mxschmitt/action-tmate@v3
            #     with:
            #         limit-access-to-actor: true

            -   name: messages
                shell: bash
                env:
                    HEAD_REF: "${{ github.head_ref }}"
                    COMMIT_MESSAGE: "${{ github.event.head_commit.message }}"
                run: |-
                    echo "CTRLPLANE_VERSION_NAME:"
                    echo "${CTRLPLANE_VERSION_NAME%%$'\n'*}"

                    git show --format=fuller "${{ github.sha }}" || true

                    echo "github.event.pull_request.head.sha: ${{ github.event.pull_request.head.sha }}"
                    echo "github.sha: ${{ github.sha }}"
                    echo "github.head_ref: ${HEAD_REF}"
                    echo "github.ref_name: ${{ github.ref_name }}"

                    echo "github.event.head_commit.message: "
                    echo ">>>"
                    cat <<-'__msg'
                    ${COMMIT_MESSAGE}
                    __msg
                    echo "<<<"

    comment-on-pr:
        permissions:
            contents: read
            actions: read # allow reading the run info

        name: call callee
        uses: ./.github/workflows/callee.yaml
        with:
            job_id: "42"
            source_run_id: ${{ github.run_id }}
